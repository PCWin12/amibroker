
_SECTION_BEGIN("Price");
SetBarsRequired(20, 0);
#include<ALFilter.afl>;

//Initial Chart --------------------------------

P = C;


//SYSTEM -----------------------------------------------------------------------
C1 = Optimize("C1", 10, 10, 20, 1);
C2 = Optimize("C2", 2, 2, 6, 1);
C3 = Optimize("C3", 1.4, 0, 1.5, 0.1);
//	Targets are in percentages.
FirstProfitTarget = 15;//Optimize("P1", 15, 10, 15, 5);  
SecondProfitTarget = 20;//Optimize("P2", 15, 15, 25, 5);

A1 = ALFilterAFL(P,C1,C2);
R1 = ROC(A1, 3);

SetChartOptions(0,chartShowArrows|chartShowDates);
SetChartBkGradientFill( ParamColor("BgTop", colorBlueGrey),ParamColor("BgBottom", colorDarkBlue));
_N(Title = StrFormat("Trending: {{NAME}} - {{INTERVAL}} {{DATE}} P %g, Close %g (%.1f%%) ROC_A1 (%.1f%%) Vol " +WriteVal( V, 1.0 ) +" {{VALUES}}", P, C, SelectedValue( ROC( P, 1 )), SelectedValue( ROC( A1, 1 )) ));
Plot( P, "Close", ParamColor("Color", colorBlack ), styleNoTitle | styleThick); 
Plot( A1, "Adaptive Laguerre Filter",colorYellow, styleLine  );
ToolTip=StrFormat("R1: %g\nOpen: %g\nHigh:  %g\nLow:   %g\nClose:  %g (%.1f%%)\nVolume: "+NumToStr( V, 1 ), R1, O, H, L, C, SelectedValue( ROC( C, 1 )));

//ENTRY RULES ------------------------------------------------------------------
SetPositionSize( 500000, spsValue ); 

Buy = (Cross(P,A1) AND abs(R1) > C3) OR ((R1 - Ref(R1, -1)) > C3 AND P > A1);
Short = (Cross(A1,P) AND abs(R1) > C3) OR ((R1 - Ref(R1, -1)) < -1*C3 AND P < A1);

Sell  = 0;// Set in position scaling formula
Cover  = 0;// Set in position scaling formula


//SCALEOUT: LONG================================================================================================
PriceAtBuy=0; 
HighSinceBuy = 0; 
SupportPrice = 0;
Exit = 0; 

for( i = 0; i < BarCount; i++ ) 
{ 
   if( PriceAtBuy == 0 AND Buy[ i ] ) 
    { 
       PriceAtBuy = BuyPrice[ i ]; 
		dist = 1.5*ATR(10);
  	   PlotText( "Buy\n@" + BuyPrice[i], i, H[ i ]+dist[i], colorBlack, colorBrightGreen); 	
		
    } 

   if( PriceAtBuy > 0 ) 
    { 
       HighSinceBuy = Max( High[ i ], HighSinceBuy); 

      if( exit == 0 AND 
          High[ i ] >= ( 1 + FirstProfitTarget * 0.01 ) * priceatbuy ) 
       { 
         // first profit target hit - scale-out 
         exit = 1; 
		  Buy[ i ] = 1111; 
		  dist = 1.5*ATR(10);
		  PlotText( "Out1\n@" + BuyPrice[i], i, H[ i ]+dist[i], colorBlack, colorYellow ); 	
	    }

		if( exit == 1 AND 
          High[ i ] >= ( 1 + SecondProfitTarget * 0.01 ) * priceatbuy ) 
       { 
         // second profit target hit - scale-out 
         exit = 2; 
		  Buy[ i ] = 2222; 
		  SupportPrice = Close[i];	
		  dist = 1.5*ATR(10);
		  PlotText( "Out2\n@" + BuyPrice[i], i, H[ i ]+dist[i], colorBlack, colorOrange ); 	
	    }

		if( exit == 2 AND 
          High[ i ] < SupportPrice)
       { 
         // 2nd profit target hit - exit 
         exit = 3; 
		  ExitType[i]=3;
         SellPrice[ i ] = Open[ i ]; 
		  dist = 1.5*ATR(10);
		  PlotText( "Out3\n@" + SellPrice[i], i, H[ i ]+dist[i], colorBlack, colorPink ); 	
	
       } 
		if( (P[ i ] < A1[ i ]) AND PriceAtBuy > 0) 
       { 
         // Sell hit - exit
         exit = 4;   
		  ExitType[i]=4;
         SellPrice[ i ] = Open[ i ]; 
		  dist = 1.5*ATR(10);
		  PlotText( "Sell\n@" + SellPrice[i], i, H[ i ]+dist[i], colorBlack, colorRed); 	
	 
       } 
      if( exit >= 3 ) 
       { 
         Buy[ i ] = 0; 
         Sell[ i ] = exit + 1; // mark appropriate exit code 
         exit = 0; 
         PriceAtBuy = 0; // reset price 
         HighSinceBuy = 0; 
		  SupportPrice = 0;

       } 
    } 
} 

SetPositionSize( 66, spsPercentOfPosition * ( Buy == 1111 ) ); // scale out 34% of position
SetPositionSize( 50, spsPercentOfPosition * ( Buy == 2222) ); // scale out 50% of remaining position

//END: SCALEOUT ========================================================================================


//SCALEOUT: SHORT================================================================================================
PriceAtShort=0; 
LowSinceShort = 0; 
ResistancePrice = 0;
Exit = 0; 

for( i = 0; i < BarCount; i++ ) 
{ 
   if( PriceAtShort == 0 AND Short[ i ] ) 
    { 
       PriceAtShort = ShortPrice[ i ]; 
		dist = 1.5*ATR(10);
  	   PlotText( "Short\n@" + ShortPrice[i], i, L[ i ]+dist[i], colorBrightGreen, colorBlack); 	
		
    } 

   if( PriceAtShort > 0 ) 
    { 
       LowSinceShort = Min( Low[ i ], LowSinceShort); 

      if( exit == 0 AND 
          Low[ i ] <= ( 1 - FirstProfitTarget * 0.01 ) * PriceAtShort ) 
       { 
         // first profit target hit - scale-out 
         exit = 1; 
		  Short[ i ] = 1111; 
		  dist = 1.5*ATR(10);
		  PlotText( "Out1\n@" + ShortPrice[i], i, L[ i ]+dist[i], colorYellow , colorBlack); 	
	    }

		if( exit == 1 AND 
          Low[ i ] <= ( 1 - SecondProfitTarget * 0.01 ) * PriceAtShort ) 
       { 
         // second profit target hit - scale-out 
         exit = 2; 
		  Short[ i ] = 2222; 
		  ResistancePrice = Close[i];	
		  dist = 1.5*ATR(10);
		  PlotText( "Out2\n@" + ShortPrice[i], i, L[ i ]+dist[i], colorOrange , colorBlack); 	
	    }

		if( exit == 2 AND 
          Low[ i ] > ResistancePrice)
       { 
         // 2nd profit target hit - exit 
         exit = 3; 
		  ExitType[i]=3;
         CoverPrice[ i ] = Open[ i ]; 
		  dist = 1.5*ATR(10);
		  PlotText( "Out3\n@" + CoverPrice[i], i, L[ i ]+dist[i], colorPink , colorBlack); 	
	
       } 
		if( (P[ i ] > A1[ i ]) AND PriceAtShort > 0) 
       { 
         // Sell hit - exit
         exit = 4;   
		  ExitType[i]=4;
         SellPrice[ i ] = Open[ i ]; 
		  dist = 1.5*ATR(10);
		  PlotText( "Sell\n@" + SellPrice[i], i, L[ i ]+dist[i], colorRed, colorBlack); 	
	 
       } 
      if( exit >= 3 ) 
       { 
         Short[ i ] = 0; 
         Cover[ i ] = exit + 1; // mark appropriate exit code 
         exit = 0; 
         PriceAtShort = 0; // reset price 
         LowSinceShort = 0; 
		  ResistancePrice = 0;

       } 
    } 
} 

SetPositionSize( 66, spsPercentOfPosition * ( Short == 1111 ) ); // scale out 34% of position
SetPositionSize( 50, spsPercentOfPosition * ( Short == 2222) ); // scale out 50% of remaining position

//END: SCALEOUT ========================================================================================