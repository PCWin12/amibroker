SetBarsRequired(200, 0);

// Ehlers ITrend
// from Ehlers, John F. Cybernetic Analysis for Stocks and Futures. Wiley. 2004. 
// Chapter 3, p. 21. Code on p. 24.

function ITrend(array, alpha)
{
  // initialize early array values and declare as array
  it = array;
  //it = (array[2] - 2*array[1] + array[0])/4; This initialization takes a long time to converge.
  for(i = 2; i < BarCount; i++)
  {
    it[i] = (alpha - alpha*alpha/4)*array[i] + 
         .5*alpha*alpha*array[i-1] -
         (alpha - .75*alpha*alpha)*array[i-2] +
         2*(1 - alpha)*it[i-1] -
         (1 - alpha)*(1 - alpha)*it[i-2];
  }
  return it;
}

function ITrendTrigger(array)
{
  trigger = 2*array - Ref(array, -2);
  return trigger;
}

Med = (H+L)/2;

// Instantaneous Trend
Trend = ITrend(Med, .05);
Trigger = ITrendTrigger(trend);
Plot(Trend, "ITrend System 1", colorRed, styleLine);
Plot(trigger, "Trigger", colorBlue, styleLine);


//Rules
SetTradeDelays(0,0,0,0);
BuyPrice = C;
SellPrice = C;
// Set the number of positions.
NumberPositions = 100;
SetOption("MaxOpenPositions", NumberPositions);
// Allocate available funds equally among them.
PositionSize = -100 / NumberPositions;

Buy = Cross(Trigger, Trend);
Short  = Cross(Trend, Trigger);
Sell = Short;
Cover = Buy;

PlotShapes( Buy * shapeUpArrow, colorGreen );
PlotShapes( Short * shapeDownArrow, colorRed );