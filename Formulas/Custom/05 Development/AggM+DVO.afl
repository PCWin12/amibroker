//TESTING ----------------------------------------------------------------------------
SetOption( "FuturesMode", True );
//SetTradeDelays( 1, 1, 1, 1 );

if( GetDatabaseName() == "eSignal" )
{
SetOption( "InitialEquity", 150000 );
MarginDeposit = 25000;
RoundLotSize = 1;
PointValue = 10;
SetOption( "CommissionMode", 2 );
SetOption( "CommissionAmount", 14 );
} 
else if ( GetDatabaseName() == "Data" )
{
SetOption( "InitialEquity", 250000 );
MarginDeposit = 25000;
RoundLotSize = 1;
PointValue = 1;
SetOption( "CommissionMode", 2 );
SetOption( "CommissionAmount", 14 );
}
else {
SetOption( "InitialEquity", 250000 );
MarginDeposit = 25000;
RoundLotSize = 1;
PointValue = 1;
SetOption( "CommissionMode", 2 );
SetOption( "CommissionAmount", 14 );
}

NumberContracts = 1;
PositionSize = MarginDeposit * NumberContracts;

OptimizerSetEngine("trib");
//SYSTEM -----------------------------------------------------------------------
AMD_am1 				= Optimize("am1", 0.5, 0, 1, 0.1);   //for FEB LIVE testing Leave at 0.35
AMD_dvo_const  	= Optimize("dvo_const", 0.5, 0, 2, 0.1); //for FEB LIVE testing Leave at 0.95
AMD_s1 				= 5;//Optimize("s1", 5, 5, 13, 0.5);

AMD_am2 = 1 - AMD_am1;
AMD_V1 = 55; AMD_V2 = 13;


AMD_w1 = 0.2; AMD_w2 = 0.3;
AMD_dvo_ma1 = 2; AMD_dvo_ma2 = 13; 

AMD_bull1 = 65; AMD_bear1 = 100 - AMD_bull1;

AMD_stop_level = Optimize("stop_level", 2, 0, 5, 0.25); 
AMD_p_trail = 13;

//AggM   -----------------------------------------------------------------------
Value1 = PercentRank(Close, AMD_V1); 
Value2 = 100 - PercentRank(Close, AMD_V2); 
Value3 = (Value1+Value2)/2;

AggM = Ref(Value3, -1) * AMD_am1 + Ref(Value3, -2) * AMD_am2;
aggm_constants = AMD_am1 + AMD_am2;

//DVO ---------------------------------------------------------------------------
s1 = AMD_s1; 
//s2 = AMD_dvo_const * s1; s3 = AMD_dvo_const * s2; s4 = AMD_dvo_const * s3; s5 = AMD_dvo_const * s4;
s2 = s1 - AMD_dvo_const; s3 = s2 - AMD_dvo_const; s4 = s3 - AMD_dvo_const; s5 = s4 - AMD_dvo_const;

w1 = AMD_w1; w2 = AMD_w2; w3 = w1; w4 = w2;

step1 = s1*(Ref(C,0))/(w1*Ref(H,0)+w2*Ref(O,0)+w3*Ref(L,0)+w4*Ref(C,0))
		+s2*(Ref(C,-1))/(w1*Ref(H,-1)+w2*Ref(O,-1)+w3*Ref(L,-1)+w4*Ref(C,-1))
		+s3*(Ref(C,-2))/(w1*Ref(H,-2)+w2*Ref(O,-2)+w3*Ref(L,-2)+w4*Ref(C,-2))
		+s4*(Ref(C,-3))/(w1*Ref(H,-3)+w2*Ref(O,-3)+w3*Ref(L,-3)+w4*Ref(C,-3))
		+s5*(Ref(C,-4))/(w1*Ref(H,-4)+w2*Ref(O,-4)+w3*Ref(L,-4)+w4*Ref(C,-4)); 

dvo = PercentRank(MA(step1, AMD_dvo_ma1), AMD_dvo_ma2 );

//Rules from CSS
//Long trades were triggered when:
//AggM rose above 65 AND ended when AggM closed below 35.  
//During this time period, we traded DVO from the long side only, 
//going  long<50, exiting above 50. 
//
//Short trades began when AggM fell below 35, 
//AND were closed above 65. 
//During this time period we traded DVO from the Short side only, 
//going Short>50 AND exiting below 50.

Bull = Cross(AggM, AMD_bull1);
Bear = Cross(AMD_bear1, AggM);
TradeType = Flip(Bull, Bear);

dvo_constants = (w1 + w2 + w3 + w4)==1 AND w4 > w1;

//TRAILING STOPS ------------------------------------------------------------------
TrailStopLong = HHV( C - AMD_stop_level * ATR(AMD_p_trail), AMD_p_trail );
TrailStopShort = LLV( C + AMD_stop_level * ATR(AMD_p_trail), AMD_p_trail );
deltastoplong = Ref(TrailStopLong, -1) - Ref(TrailStopLong, -2);
deltastopshort = Ref(TrailStopShort, -1) - Ref(TrailStopShort, -2);
stoppointslong = Max(0, C - TrailStopLong);
stoppointsshort = Max(0, TrailStopShort - C);

//ENTRY RULES ------------------------------------------------------------------
Buy = TradeType > 0 AND dvo < 50 AND C > TrailStopLong AND dvo_constants == True AND aggm_constants == 1 AND stoppointslong > 30;;
Short = TradeType <= 0 AND dvo > 50 AND C < TrailStopShort AND dvo_constants == 1 AND aggm_constants == 1 AND stoppointsshort > 30;

BuyShort = Flip(Buy, Short);

Sell = 0;// only by stop
Cover = 0;// only by stop
stoploss = IIf(BuyShort > 0, stoppointslong ,stoppointsshort );

//for the graph
plotBuy = Buy;
PlotShort = Short;
plotSell = C < Ref(TrailStopLong, -1); 
plotCover = C > Ref(TrailStopShort, -1);

plotBuy   = ExRem( plotBuy, plotSell);
plotSell  = ExRem( plotSell, plotBuy);
plotShort = ExRem( plotShort, plotCover);
plotCover = ExRem( plotCover, plotShort);

//POSITION SIZING ---------------------------------------------------------
E = Equity();



pct_risk = 3;//from system backtest using 1 contract, then using http://www.albionresearch.com/kelly/default.php
n = Min((pct_risk / 100 * E / (stoploss * PointValue) * MarginDeposit) / E, 1) * E;
//PositionSize = n;

contracts = int(n / MarginDeposit);
risk = contracts * stoploss * PointValue;
realpercentrisk = risk / E * 100;

/*Note on using stops:
you trade on next bar Open AND want to exit intraday on stop price
Correct settings: 
ActivateStopsImmediately turned ON
ExitAtStop = 1
Trade delays set to one
Trade price set to Open
*/

ApplyStop( stopTypeTrailing, stopModePoint, stoploss, 1, True );


if( GetDatabaseName() == "eSignal" AND Name() == "$J200-FTSE")
{
/* NB Hack for weird AB behaviour
I set this to Close, then it picks the field you specify in the backtester settings, 
which is Open */
//fO = Foreign("ALSI5M", "Close", 1); 
//BuyPrice = fO;
/* end hack */
}

Filter=1;
AddColumn( stoploss , "stoploss", 1.0 );

//PLOTS -----------------------------------------------------------------------------
P = (H+L+C+C)/4;

_N(Title = StrFormat(_DEFAULT_NAME() + " | {{NAME}} - {{INTERVAL}} | {{DATE}} | P %g | Open %g | High %g | Low %g | Close %g (%.1f%%)"
  + "\n      stoploss : " + WriteVal( stoploss , 1.0 ) + " | BuyShort " + WriteVal(BuyShort, 1.0)
  + "\n      PositionSize: " + WriteVal( n, 1.2 ) + " | Equity: " + WriteVal(E, 1.0) + " | Contracts: " + WriteVal(contracts, 1.0) + " | Risk: " + WriteVal(risk, 1.0)+ " | %Risk: " + WriteVal(realpercentrisk, 1.0) + " | %Half K Risk: " + WriteVal(pct_risk, 1.0)
  + "\n      Stop Points Long: " + WriteVal( stoppointslong , 1.0 ) + " (" +  WriteVal( deltastoplong , 1.0 ) + ") | Stop Points Short: " + WriteVal(stoppointsshort, 1.0) + " (" +  WriteVal( deltastopshort , 1.0 ) + ")"
  + "\n      Vol: " + WriteVal( V, 1.0 ) +" {{VALUES}}", P, O, H, L, C, SelectedValue( ROC( C, 1 )) ));

Plot( C, "Close", colorBlack, styleCandle); 
ToolTip=StrFormat("Open: %g\nHigh:  %g\nLow:   %g\nClose:  %g (%.1f%%)\nVolume: "+NumToStr( V, 1 ), O, H, L, C, SelectedValue( ROC( C, 1 )));

Plot( 2, "AggM ("+AggM+")",
IIf( TradeType>0, colorGreen, IIf( TradeType<=0, colorRed, 0 )),
styleOwnScale|styleArea|styleNoLabel, -0.5, 100 );

Plot( TrailStopLong, "Trailing stop long", colorBrown, styleLine );
Plot( TrailStopShort, "Trailing stop short", colorBlueGrey, styleLine );

PlotShapes(plotBuy * (shapeCircle + shapePositionAbove), colorGold);
PlotShapes(plotShort * (shapeCircle), colorOrange);
PlotShapes(plotSell * (shapeHollowCircle + shapePositionAbove), colorGold);
PlotShapes(plotCover * (shapeHollowCircle), colorOrange);

Plot( Volume, _DEFAULT_NAME(), IIf(C<O,colorRed, colorGreen), styleNoTitle | ParamStyle( "Style", styleHistogram | styleOwnScale | styleThick | styleNoLabel, maskHistogram  ), 3 );


SetChartOptions(0,chartShowArrows|chartShowDates);
SetChartBkGradientFill( ParamColor("BgTop", colorDarkGrey),ParamColor("BgBottom", colorBlack));